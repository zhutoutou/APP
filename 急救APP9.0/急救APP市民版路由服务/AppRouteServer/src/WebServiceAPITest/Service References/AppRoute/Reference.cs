//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebServiceAPITest.AppRoute {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.zitsoft.com/", ConfigurationName="AppRoute.AppRouteServiceSoap")]
    public interface AppRouteServiceSoap {
        
        // CODEGEN: 消息 addCallInfoRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://www.zitsoft.com/addCallInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WebServiceAPITest.AppRoute.addCallInfoResponse addCallInfo(WebServiceAPITest.AppRoute.addCallInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.zitsoft.com/addCallInfo", ReplyAction="*")]
        System.IAsyncResult BeginaddCallInfo(WebServiceAPITest.AppRoute.addCallInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        WebServiceAPITest.AppRoute.addCallInfoResponse EndaddCallInfo(System.IAsyncResult result);
        
        // CODEGEN: 消息 addQualityCommentRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://www.zitsoft.com/addQualityComment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WebServiceAPITest.AppRoute.addQualityCommentResponse addQualityComment(WebServiceAPITest.AppRoute.addQualityCommentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.zitsoft.com/addQualityComment", ReplyAction="*")]
        System.IAsyncResult BeginaddQualityComment(WebServiceAPITest.AppRoute.addQualityCommentRequest request, System.AsyncCallback callback, object asyncState);
        
        WebServiceAPITest.AppRoute.addQualityCommentResponse EndaddQualityComment(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zitsoft.com/")]
    public partial class CredentialSoapHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addCallInfo", WrapperNamespace="http://www.zitsoft.com/", IsWrapped=true)]
    public partial class addCallInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.zitsoft.com/")]
        public WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.zitsoft.com/", Order=0)]
        public string callInfoJson;
        
        public addCallInfoRequest() {
        }
        
        public addCallInfoRequest(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string callInfoJson) {
            this.CredentialSoapHeader = CredentialSoapHeader;
            this.callInfoJson = callInfoJson;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addCallInfoResponse", WrapperNamespace="http://www.zitsoft.com/", IsWrapped=true)]
    public partial class addCallInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.zitsoft.com/", Order=0)]
        public string addCallInfoResult;
        
        public addCallInfoResponse() {
        }
        
        public addCallInfoResponse(string addCallInfoResult) {
            this.addCallInfoResult = addCallInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addQualityComment", WrapperNamespace="http://www.zitsoft.com/", IsWrapped=true)]
    public partial class addQualityCommentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.zitsoft.com/")]
        public WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.zitsoft.com/", Order=0)]
        public string qualityCommentJson;
        
        public addQualityCommentRequest() {
        }
        
        public addQualityCommentRequest(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string qualityCommentJson) {
            this.CredentialSoapHeader = CredentialSoapHeader;
            this.qualityCommentJson = qualityCommentJson;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addQualityCommentResponse", WrapperNamespace="http://www.zitsoft.com/", IsWrapped=true)]
    public partial class addQualityCommentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.zitsoft.com/", Order=0)]
        public string addQualityCommentResult;
        
        public addQualityCommentResponse() {
        }
        
        public addQualityCommentResponse(string addQualityCommentResult) {
            this.addQualityCommentResult = addQualityCommentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AppRouteServiceSoapChannel : WebServiceAPITest.AppRoute.AppRouteServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addCallInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addCallInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addQualityCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addQualityCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppRouteServiceSoapClient : System.ServiceModel.ClientBase<WebServiceAPITest.AppRoute.AppRouteServiceSoap>, WebServiceAPITest.AppRoute.AppRouteServiceSoap {
        
        private BeginOperationDelegate onBeginaddCallInfoDelegate;
        
        private EndOperationDelegate onEndaddCallInfoDelegate;
        
        private System.Threading.SendOrPostCallback onaddCallInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddQualityCommentDelegate;
        
        private EndOperationDelegate onEndaddQualityCommentDelegate;
        
        private System.Threading.SendOrPostCallback onaddQualityCommentCompletedDelegate;
        
        public AppRouteServiceSoapClient() {
        }
        
        public AppRouteServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppRouteServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppRouteServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppRouteServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<addCallInfoCompletedEventArgs> addCallInfoCompleted;
        
        public event System.EventHandler<addQualityCommentCompletedEventArgs> addQualityCommentCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebServiceAPITest.AppRoute.addCallInfoResponse WebServiceAPITest.AppRoute.AppRouteServiceSoap.addCallInfo(WebServiceAPITest.AppRoute.addCallInfoRequest request) {
            return base.Channel.addCallInfo(request);
        }
        
        public string addCallInfo(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string callInfoJson) {
            WebServiceAPITest.AppRoute.addCallInfoRequest inValue = new WebServiceAPITest.AppRoute.addCallInfoRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.callInfoJson = callInfoJson;
            WebServiceAPITest.AppRoute.addCallInfoResponse retVal = ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).addCallInfo(inValue);
            return retVal.addCallInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebServiceAPITest.AppRoute.AppRouteServiceSoap.BeginaddCallInfo(WebServiceAPITest.AppRoute.addCallInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddCallInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddCallInfo(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string callInfoJson, System.AsyncCallback callback, object asyncState) {
            WebServiceAPITest.AppRoute.addCallInfoRequest inValue = new WebServiceAPITest.AppRoute.addCallInfoRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.callInfoJson = callInfoJson;
            return ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).BeginaddCallInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebServiceAPITest.AppRoute.addCallInfoResponse WebServiceAPITest.AppRoute.AppRouteServiceSoap.EndaddCallInfo(System.IAsyncResult result) {
            return base.Channel.EndaddCallInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndaddCallInfo(System.IAsyncResult result) {
            WebServiceAPITest.AppRoute.addCallInfoResponse retVal = ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).EndaddCallInfo(result);
            return retVal.addCallInfoResult;
        }
        
        private System.IAsyncResult OnBeginaddCallInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader = ((WebServiceAPITest.AppRoute.CredentialSoapHeader)(inValues[0]));
            string callInfoJson = ((string)(inValues[1]));
            return this.BeginaddCallInfo(CredentialSoapHeader, callInfoJson, callback, asyncState);
        }
        
        private object[] OnEndaddCallInfo(System.IAsyncResult result) {
            string retVal = this.EndaddCallInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddCallInfoCompleted(object state) {
            if ((this.addCallInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addCallInfoCompleted(this, new addCallInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addCallInfoAsync(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string callInfoJson) {
            this.addCallInfoAsync(CredentialSoapHeader, callInfoJson, null);
        }
        
        public void addCallInfoAsync(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string callInfoJson, object userState) {
            if ((this.onBeginaddCallInfoDelegate == null)) {
                this.onBeginaddCallInfoDelegate = new BeginOperationDelegate(this.OnBeginaddCallInfo);
            }
            if ((this.onEndaddCallInfoDelegate == null)) {
                this.onEndaddCallInfoDelegate = new EndOperationDelegate(this.OnEndaddCallInfo);
            }
            if ((this.onaddCallInfoCompletedDelegate == null)) {
                this.onaddCallInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddCallInfoCompleted);
            }
            base.InvokeAsync(this.onBeginaddCallInfoDelegate, new object[] {
                        CredentialSoapHeader,
                        callInfoJson}, this.onEndaddCallInfoDelegate, this.onaddCallInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebServiceAPITest.AppRoute.addQualityCommentResponse WebServiceAPITest.AppRoute.AppRouteServiceSoap.addQualityComment(WebServiceAPITest.AppRoute.addQualityCommentRequest request) {
            return base.Channel.addQualityComment(request);
        }
        
        public string addQualityComment(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string qualityCommentJson) {
            WebServiceAPITest.AppRoute.addQualityCommentRequest inValue = new WebServiceAPITest.AppRoute.addQualityCommentRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.qualityCommentJson = qualityCommentJson;
            WebServiceAPITest.AppRoute.addQualityCommentResponse retVal = ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).addQualityComment(inValue);
            return retVal.addQualityCommentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebServiceAPITest.AppRoute.AppRouteServiceSoap.BeginaddQualityComment(WebServiceAPITest.AppRoute.addQualityCommentRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddQualityComment(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddQualityComment(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string qualityCommentJson, System.AsyncCallback callback, object asyncState) {
            WebServiceAPITest.AppRoute.addQualityCommentRequest inValue = new WebServiceAPITest.AppRoute.addQualityCommentRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.qualityCommentJson = qualityCommentJson;
            return ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).BeginaddQualityComment(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebServiceAPITest.AppRoute.addQualityCommentResponse WebServiceAPITest.AppRoute.AppRouteServiceSoap.EndaddQualityComment(System.IAsyncResult result) {
            return base.Channel.EndaddQualityComment(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndaddQualityComment(System.IAsyncResult result) {
            WebServiceAPITest.AppRoute.addQualityCommentResponse retVal = ((WebServiceAPITest.AppRoute.AppRouteServiceSoap)(this)).EndaddQualityComment(result);
            return retVal.addQualityCommentResult;
        }
        
        private System.IAsyncResult OnBeginaddQualityComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader = ((WebServiceAPITest.AppRoute.CredentialSoapHeader)(inValues[0]));
            string qualityCommentJson = ((string)(inValues[1]));
            return this.BeginaddQualityComment(CredentialSoapHeader, qualityCommentJson, callback, asyncState);
        }
        
        private object[] OnEndaddQualityComment(System.IAsyncResult result) {
            string retVal = this.EndaddQualityComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddQualityCommentCompleted(object state) {
            if ((this.addQualityCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addQualityCommentCompleted(this, new addQualityCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addQualityCommentAsync(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string qualityCommentJson) {
            this.addQualityCommentAsync(CredentialSoapHeader, qualityCommentJson, null);
        }
        
        public void addQualityCommentAsync(WebServiceAPITest.AppRoute.CredentialSoapHeader CredentialSoapHeader, string qualityCommentJson, object userState) {
            if ((this.onBeginaddQualityCommentDelegate == null)) {
                this.onBeginaddQualityCommentDelegate = new BeginOperationDelegate(this.OnBeginaddQualityComment);
            }
            if ((this.onEndaddQualityCommentDelegate == null)) {
                this.onEndaddQualityCommentDelegate = new EndOperationDelegate(this.OnEndaddQualityComment);
            }
            if ((this.onaddQualityCommentCompletedDelegate == null)) {
                this.onaddQualityCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddQualityCommentCompleted);
            }
            base.InvokeAsync(this.onBeginaddQualityCommentDelegate, new object[] {
                        CredentialSoapHeader,
                        qualityCommentJson}, this.onEndaddQualityCommentDelegate, this.onaddQualityCommentCompletedDelegate, userState);
        }
    }
}
